#!/bin/bash

# Monthly Review Script for HUMMBL Bibliography
# Generates comprehensive statistics and gap analysis report

set -e

echo "📊 Generating Monthly Bibliography Review..."
echo "=========================================="
echo ""

# Check if we're in the right directory
if [ ! -d "../toolkit" ]; then
    echo "❌ Error: Must be run from scripts/ directory"
    exit 1
fi

# Navigate to toolkit directory
cd ../toolkit

# Generate timestamp
TIMESTAMP=$(date +%Y-%m-%d)
REPORT_FILE="../reports/${TIMESTAMP}-monthly-review.md"

echo "📝 Creating report: $REPORT_FILE"
echo ""

# Create report header
cat > "$REPORT_FILE" << EOF
# HUMMBL Bibliography Monthly Review

**Date**: $(date +"%B %d, %Y")  
**Generated**: $(date +"%Y-%m-%d %H:%M:%S %Z")

---

## Executive Summary

This automated report provides monthly statistics and gap analysis for the HUMMBL Bibliography.

EOF

# Generate statistics
echo "📈 Generating statistics..."
npm run stats >> "$REPORT_FILE"

# Add separator
echo "" >> "$REPORT_FILE"
echo "---" >> "$REPORT_FILE"
echo "" >> "$REPORT_FILE"

# Generate transformation keywords
echo "🔑 Extracting transformation keywords..."
echo "## Transformation Keyword Analysis" >> "$REPORT_FILE"
echo "" >> "$REPORT_FILE"
npm run keywords >> "$REPORT_FILE"

# Add separator
echo "" >> "$REPORT_FILE"
echo "---" >> "$REPORT_FILE"
echo "" >> "$REPORT_FILE"

# Gap analysis summary
echo "📊 Analyzing gaps..."
echo "## Gap Analysis Summary" >> "$REPORT_FILE"
echo "" >> "$REPORT_FILE"
echo "Based on current distribution:" >> "$REPORT_FILE"
echo "" >> "$REPORT_FILE"

npm run stats:json > /tmp/stats.json

# Extract gap information using Node.js
node -e "
const stats = require('/tmp/stats.json');
const transformations = stats.transformations;
const total = stats.total;
const target = Math.floor(total / 6);

console.log('| Transformation | Current | Target | Gap | Status |');
console.log('|----------------|---------|--------|-----|--------|');

const order = ['P', 'IN', 'CO', 'DE', 'RE', 'SY'];
const names = {
  'P': 'Perspective',
  'IN': 'Inversion',
  'CO': 'Composition',
  'DE': 'Decomposition',
  'RE': 'Recursion',
  'SY': 'Synthesis'
};

order.forEach(t => {
  const count = transformations[t];
  const gap = count - target;
  const status = gap >= 0 ? '✅' : '⚠️';
  console.log(\`| \${t} (\${names[t]}) | \${count} | \${target} | \${gap > 0 ? '+' : ''}\${gap} | \${status} |\`);
});
" >> "$REPORT_FILE"

# Add recommendations
echo "" >> "$REPORT_FILE"
echo "### Priority Actions" >> "$REPORT_FILE"
echo "" >> "$REPORT_FILE"

node -e "
const stats = require('/tmp/stats.json');
const transformations = stats.transformations;
const total = stats.total;
const target = Math.floor(total / 6);

const order = ['P', 'IN', 'CO', 'DE', 'RE', 'SY'];
const names = {
  'P': 'Perspective',
  'IN': 'Inversion',
  'CO': 'Composition',
  'DE': 'Decomposition',
  'RE': 'Recursion',
  'SY': 'Synthesis'
};

const underrepresented = order.filter(t => transformations[t] < target - 1);

if (underrepresented.length > 0) {
  console.log('**Focus areas for next month:**');
  console.log('');
  underrepresented.forEach(t => {
    const gap = target - transformations[t];
    console.log(\`- **\${t} (\${names[t]})**: Need \${gap} more entries\`);
  });
} else {
  console.log('✅ All transformations adequately covered');
}

console.log('');
console.log('**Quality improvements:**');
console.log('');
const doiCoverage = (stats.quality.withDOI / stats.total * 100).toFixed(1);
const isbnCoverage = (stats.quality.withISBN / stats.total * 100).toFixed(1);

if (doiCoverage < 40) {
  console.log(\`- Increase DOI coverage from \${doiCoverage}% to 40%\`);
}
if (isbnCoverage < 85) {
  console.log(\`- Increase ISBN coverage from \${isbnCoverage}% to 85%\`);
}
" >> "$REPORT_FILE"

# Add footer
echo "" >> "$REPORT_FILE"
echo "---" >> "$REPORT_FILE"
echo "" >> "$REPORT_FILE"
echo "**Next Review**: $(date -d '+1 month' +%Y-%m-%d)" >> "$REPORT_FILE"
echo "" >> "$REPORT_FILE"
echo "*This report was automatically generated by \`scripts/monthly-review.sh\`*" >> "$REPORT_FILE"

# Return to scripts directory
cd ../scripts

echo ""
echo "✅ Monthly review generated: $REPORT_FILE"
echo ""
echo "📋 Next steps:"
echo "  1. Review the report"
echo "  2. Update docs/GAP_ANALYSIS.md if needed"
echo "  3. Commit the report: git add reports/ && git commit -m 'chore: monthly review ${TIMESTAMP}'"
echo ""
